<nav>
    <div class="flex">
        <img src="{{ asset('assets/img/burger-menu.svg') }}" alt=""
             class="my-burger burger-hidden my-closed ml-0 mt-3 fixed">
        <div class="my-menu-container menu-hidden w-48 py-3.5 mt-3 rounded-br-lg fixed">
            {% set action =  null %}
            {% if app.request.get('_route') == 'app_menu' %}
                {% set action = '/carte' %}
            {% elseif app.request.get('_route') == 'app_sell' %}
                {% set action = '/vente' %}
            {% endif %}

            {% if action is not null %}
            <form id="searchTermForm" action="{{ action }}" method="get">
                <div class="flex">
                    {% if searchTerm %}  <input type="text"
                                                class="my-search-input w-32 rounded-full p-1 ml-2 focus:font-bold focus:ring-0 border-0"
                                                placeholder="Tout voir" name="search">
                    {% else %} <input type="text"
                                      class="my-search-input w-32 rounded-full p-1 ml-2 focus:font-bold focus:ring-0 border-0"
                                      placeholder="Recherche..." name="search">
                    {% endif %}
                    <button type="submit" id="submitBtn"><img class="mx-4"
                                                              src="{{ asset('assets/img/search-icon.svg') }}"
                                                              alt="">
                    </button>
                </div>
            </form>
            {% endif %}

            {{ form_start(form) }}
            <div class="my-filter-fields">
                {{ form_row(form.style) }}
            </div>

            <div class="my-filter-fields">
                {{ form_row(form.origin) }}
            </div>

            <div class="my-filter-fields">
                {{ form_row(form.brand) }}
            </div>

            <div class="my-filter-fields my-capacity">
                {{ form_row(form.capacity) }}
            </div>

            <div class="flex flex-col items-center w-48">

                <div class="pt-2">
                    {{ form_row(form.submit) }}
                </div>

                <div class="pt-2">
                    {{ form_row(form.button) }}
                </div>

            </div>
            {{ form_end(form) }}
        </div>
    </div>
</nav>

<script>

    let selects = document.querySelectorAll("select");

    selects.forEach(function (select) {
        let options = select.getElementsByTagName('option');

        select.addEventListener('focus', function () {

// Appliquer le style souhaité à chaque option
            for (let i = 0; i < options.length; i++) {
                options[i].style.backgroundColor = "var(--persian-orange)"; // Modifier la couleur d'arrière-plan du texte de toutes les options
                if (i === 0) {
                    options[i].style.fontWeight = "bold"; // Mettre en gras le texte de la première option
                }
            }
        });
    });

    let burger = document.querySelector('.my-burger');
    let menu = document.querySelector('.my-menu-container');


    burger.addEventListener('click', () => {

        if (burger.classList.contains('my-closed')) {
            burger.src = "{{ asset('assets/img/burger-menu-cross.svg') }}";
            burger.classList.remove("my-closed");
            burger.classList.add("my-opened");
            burger.classList.add("burger-visible")
            burger.classList.remove("burger-hidden")
            menu.classList.remove("menu-hidden");
            menu.classList.add("menu-visible");

        } else {
            burger.src = "{{ asset('assets/img/burger-menu.svg') }}";
            burger.classList.remove("my-opened");
            burger.classList.add("my-closed");
            burger.classList.add("burger-hidden")
            burger.classList.remove("burger-visible")
            menu.classList.remove("menu-visible");
            menu.classList.add("menu-hidden");

        }
    });

    //suppression des paramètres dans la barre URL
    function removeSearchParamFromURL() {
        let urlWithoutSearchParam = window.location.href.split('?')[0];
        history.replaceState({}, document.title, urlWithoutSearchParam);
    }

    // Attacher un événement au chargement de la page pour supprimer le paramètre 'search'
    window.addEventListener('DOMContentLoaded', () => {
        removeSearchParamFromURL();
    });

    function resetFilters() {

        let selects = document.querySelectorAll('select');
        let search = document.querySelector('.my-search-input');
        let submitBtn = document.querySelector('#submitBtn');

        selects.forEach(function (select) {
            select.value = "";
        })

        search.value = "";

        submitBtn.click();

    }

    const myButtons = document.querySelectorAll('.my-button');

    myButtons.forEach((myButton) => {
        myButton.addEventListener('mouseup', () => {
            setTimeout(myButton.blur(), 100); // Enlever le focus pour restaurer la boîte d'ombre par défaut
        });
    });

    function capacityDisplay() {
        let capacityOptions = document.querySelectorAll(".my-capacity option");

        capacityOptions.forEach(option => {
            let capacity = option.innerHTML;

            // Vérifiez si la capacité a trois caractères
            if (capacity.length >= 3 && capacity.length <= 4) {
                // splice pour insérer une virgule après le deuxième caractère
                let newCapacity = capacity.slice(0, 2) + ',' + capacity.slice(2) + ' cl';
                option.innerHTML = newCapacity;
            }
        });
    }

    capacityDisplay();

</script>